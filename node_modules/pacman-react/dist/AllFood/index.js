function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import PropTypes from 'prop-types';
import Food from '../Food';
import './style.scss';
export default function AllFood(_ref) {
  var food = _ref.food,
      props = _objectWithoutProperties(_ref, ["food"]);

  var items = food.filter(function (_ref2) {
    var eaten = _ref2.eaten;
    return !eaten;
  }).map(function (_ref3) {
    var key = _ref3.key,
        item = _objectWithoutProperties(_ref3, ["key"]);

    return React.createElement(Food, _extends({
      key: key
    }, item, props));
  });
  return React.createElement("div", {
    className: "food-all"
  }, items);
}
AllFood.propTypes = {
  food: PropTypes.array.isRequired
};
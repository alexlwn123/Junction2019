import * as React from 'react'
import styled from 'styled-components'
import { Button } from './Button'
import { FoldableContainer } from './FoldableContainer'
import { GameContext } from './GameEngine'
import { DraggableContainer } from './DraggableContainer'
import { SubmitForm } from './SubmitForm'

export class GameDetails extends React.Component {
  render() {
    return (
      <GameContext.Consumer>
        {context => {
          const {
            gamePaused,
            score,
            rowsCleared,
            gameDetailsDisplay,
            onRestartGame,
            onQuit,
            gameOver,
            onSubmitScore,
            scoreSubmitted,
          } = context

          return (
            <React.Fragment>
              <DraggableContainer>
                <InnerContainer>
                  {gameOver && <GameDetailsItem>GAME OVER!</GameDetailsItem>}
                  {gameOver && (
                    <Button onClick={onRestartGame}>Restart game</Button>
                  )}
                  {gameDetailsDisplay.score && (
                    <GameDetailsItem>Score: {score}</GameDetailsItem>
                  )}
                  {gameDetailsDisplay.rowsCleared && (
                    <GameDetailsItem>
                      Rows cleared: {rowsCleared}
                    </GameDetailsItem>
                  )}
                  {gameDetailsDisplay.quit && (
                    <Button onClick={onQuit}>Quit game</Button>
                  )}
                  {gameDetailsDisplay.controls && (
                    <GameDetailsItem>
                      <FoldableContainer header={'Controls'}>
                        <div>a: left</div>
                        <div>d: right</div>
                        <div>s: down</div>
                        <div>w: turn clockwise</div>
                        <div>space: pause</div>
                      </FoldableContainer>
                    </GameDetailsItem>
                  )}
                  {gamePaused && <GameDetailsItem>Game paused</GameDetailsItem>}
                  {gameOver && !scoreSubmitted && (
                    <SubmitForm onSubmit={onSubmitScore} />
                  )}
                </InnerContainer>
              </DraggableContainer>
            </React.Fragment>
          )
        }}
      </GameContext.Consumer>
    )
  }
}

const GameDetailsItem = styled.div`
  user-select: none; /* Non-prefixed version, currently supported by Chrome and Opera */
  -webkit-touch-callout: none; /* iOS Safari */
  -webkit-user-select: none; /* Safari */
  -khtml-user-select: none; /* Konqueror HTML */
  -moz-user-select: none; /* Firefox */
  -ms-user-select: none; /* Internet Explorer/Edge */

  margin-left: 4px;
`

const InnerContainer = styled.div`
  position: relative;
  width: 100%;
  height: 100%;
  margin: 0;
`

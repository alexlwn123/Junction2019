{"ast":null,"code":"import _slicedToArray from \"/Users/Mehdi/Junction2019/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Mehdi/Junction2019/src/components/Main.tsx\";\nimport React, { useState } from 'react';\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\nimport './Main.css';\nimport Tetris from 'react-tetris-overlay';\n\nconst Main = () => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setIsOpen = _useState2[1];\n\n  const handleClick = () => setIsOpen(!isOpen);\n\n  return React.createElement(\"header\", {\n    className: \"Main-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Main-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  }, \"Title\"), React.createElement(Button, {\n    text: \"Popup Modal\",\n    handleClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13\n    },\n    __self: this\n  }), React.createElement(Modal, {\n    isOpen: isOpen,\n    handleClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }, \"Some text in the Modal..\"), React.createElement(Tetris, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  })), \"Learn Game\");\n};\n\nexport default Main;","map":{"version":3,"sources":["/Users/Mehdi/Junction2019/src/components/Main.tsx"],"names":["React","useState","Button","Modal","Tetris","Main","isOpen","setIsOpen","handleClick"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAO,YAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;AAEA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACaJ,QAAQ,CAAC,KAAD,CADrB;AAAA;AAAA,QACRK,MADQ;AAAA,QACAC,SADA;;AAEf,QAAMC,WAAW,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAAnC;;AACA,SACE;AAAQ,IAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,aAAb;AAA2B,IAAA,WAAW,EAAEE,WAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,MAAf;AAAuB,IAAA,WAAW,EAAEE,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCADF,EAEE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CAHF,eADF;AAWD,CAdH;;AAgBE,eAAeH,IAAf","sourcesContent":["import React, { useState } from 'react';\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\nimport './Main.css';\nimport Tetris from 'react-tetris-overlay';\n\nconst Main = () => {\n    const [isOpen, setIsOpen] = useState(false);\n    const handleClick = () => setIsOpen(!isOpen);\n    return (\n      <header className=\"Main-header\">\n        <div className=\"Main-title\">Title</div>\n        <Button text=\"Popup Modal\" handleClick={handleClick} />\n        <Modal isOpen={isOpen} handleClick={handleClick}>\n          <p>Some text in the Modal..</p>\n          <Tetris />\n        </Modal>\n        Learn Game\n      </header>\n    );\n  };\n\n  export default Main;"]},"metadata":{},"sourceType":"module"}
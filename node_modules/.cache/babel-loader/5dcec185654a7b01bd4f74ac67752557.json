{"ast":null,"code":"import _slicedToArray from \"/Users/Mehdi/Junction2019/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Mehdi/Junction2019/src/components/BankQuest.tsx\";\nimport React, { useState, useContext } from \"react\";\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\nimport Form from \"./Form\";\nimport \"./BankQuest.css\";\nimport { DataContext } from \"../contexts/dataContext\";\n\nconst BankQuest = props => {\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        isOpen = _useState2[0],\n        setIsOpen = _useState2[1];\n\n  const handleClick = () => setIsOpen(!isOpen);\n\n  const _useContext = useContext(DataContext),\n        questions = _useContext.data.questions;\n\n  if (!questions) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    });\n  }\n\n  const malwareQuests = props.questType.type.filter(q => q.type === props.variant)[0];\n\n  if (!questions || !malwareQuests) {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    });\n  }\n\n  console.log(props.questType);\n  return React.createElement(\"div\", {\n    className: \"BankQuest\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"BankQuest-button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Button, {\n    text: \"Add New\",\n    handleClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"BankQuest-list\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"Question\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Answer\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }))), React.createElement(Modal, {\n    isOpen: isOpen,\n    handleClick: handleClick,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, React.createElement(Form, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  })));\n};\n\nexport default BankQuest;","map":{"version":3,"sources":["/Users/Mehdi/Junction2019/src/components/BankQuest.tsx"],"names":["React","useState","useContext","Button","Modal","Form","DataContext","BankQuest","props","isOpen","setIsOpen","handleClick","questions","data","malwareQuests","questType","type","filter","q","variant","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,QAA4C,OAA5C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,iBAAP;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAMA,MAAMC,SAAS,GAAIC,KAAD,IAAkB;AAAA,oBACNP,QAAQ,CAAC,KAAD,CADF;AAAA;AAAA,QAC3BQ,MAD2B;AAAA,QACnBC,SADmB;;AAElC,QAAMC,WAAW,GAAG,MAAMD,SAAS,CAAC,CAACD,MAAF,CAAnC;;AAFkC,sBAK9BP,UAAU,CAACI,WAAD,CALoB;AAAA,QAIxBM,SAJwB,eAIhCC,IAJgC,CAIxBD,SAJwB;;AAMlC,MAAI,CAACA,SAAL,EAAgB;AACd,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACA,QAAME,aAAa,GAAGN,KAAK,CAACO,SAAN,CAAgBC,IAAhB,CAAqBC,MAArB,CACpBC,CAAD,IAAYA,CAAC,CAACF,IAAF,KAAWR,KAAK,CAACW,OADR,EAErB,CAFqB,CAAtB;;AAGD,MAAI,CAACP,SAAD,IAAc,CAACE,aAAnB,EAAkC;AAChC,WAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACD;;AACDM,EAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACO,SAAlB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,SAAb;AAAuB,IAAA,WAAW,EAAEJ,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,EAIE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,CADF,CADF,EAOE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF,CAJF,EAsBE,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEF,MAAf;AAAuB,IAAA,WAAW,EAAEE,WAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAtBF,CADF;AA4BD,CA5CD;;AA8CA,eAAeJ,SAAf","sourcesContent":["import React, { useState, useContext } from \"react\";\nimport Button from \"./Button\";\nimport Modal from \"./Modal\";\nimport Form from \"./Form\";\nimport \"./BankQuest.css\";\nimport { DataContext } from \"../contexts/dataContext\";\n\ninterface Props {\n  variant: string;\n  questType: any\n}\nconst BankQuest = (props: Props) => {\n  const [isOpen, setIsOpen] = useState(false);\n  const handleClick = () => setIsOpen(!isOpen);\n  const {\n    data: { questions }\n  } = useContext(DataContext);\n  if (!questions) {\n    return <div></div>;\n  }\n   const malwareQuests = props.questType.type.filter(\n    (q: any) => q.type === props.variant\n  )[0];\n  if (!questions || !malwareQuests) {\n    return <div></div>;\n  }\n  console.log(props.questType);\n  return (\n    <div className=\"BankQuest\">\n      <div className=\"BankQuest-button\">\n        <Button text=\"Add New\" handleClick={handleClick} />\n      </div>\n      <div className=\"BankQuest-list\">\n        <table>\n          <thead>\n            <tr>\n              <th>Question</th>\n              <th>Answer</th>\n            </tr>\n          </thead>\n          <tbody>\n         {/*     {malwareQuests.questions.map((q: any) => (\n              <tr key={q.id}>\n                <td>{q.question}</td>\n                <td>{q.answer}</td>\n              </tr>\n            ))} */}\n          </tbody>\n        </table>\n      </div>\n      <Modal isOpen={isOpen} handleClick={handleClick}>\n        <Form />\n      </Modal>\n    </div>\n  );\n};\n\nexport default BankQuest;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _slicedToArray from \"/Users/Mehdi/Junction2019/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Mehdi/Junction2019/src/components/Admin.tsx\";\nimport React, { useState, useContext, useEffect } from \"react\";\nimport BanckQuest from './BankQuest';\nimport \"./Admin.css\";\nimport { DataContext } from \"../contexts/dataContext\";\n\nconst Admin = () => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        variant = _useState2[0],\n        setVariant = _useState2[1];\n\n  const handleClickTab = type => () => {\n    setVariant(type);\n  };\n\n  const _useContext = useContext(DataContext),\n        data = _useContext.data,\n        questions = _useContext.data.questions,\n        dataService = _useContext.dataService;\n\n  useEffect(() => {\n    dataService.getQuestions();\n  }, []);\n\n  const questType = () => {\n    let arr = [{\n      type: questions[0].type,\n      questions: arr[0].questions.push(questions[0].questions)\n    }];\n\n    for (let i = 0; i < questions.length; i++) {\n      if (!arr[i].type.includes(questions[i].type)) {\n        arr.push({\n          type: questions[i].type,\n          questions: arr[i].questions.push(questions[i].questions)\n        });\n      } // arr[i].questions.push(...questions[i].questions);\n\n    }\n\n    return arr;\n  };\n\n  console.log(questType());\n  return React.createElement(\"div\", {\n    className: \"Admin\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Admin-side\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"Admin-tab Admin-tabs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Questions Groups\")), React.createElement(\"div\", {\n    className: \"Admin-content\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, variant && React.createElement(BanckQuest, {\n    variant: variant,\n    questType: questType(),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  })));\n};\n\nexport default Admin;","map":{"version":3,"sources":["/Users/Mehdi/Junction2019/src/components/Admin.tsx"],"names":["React","useState","useContext","useEffect","BanckQuest","DataContext","Admin","variant","setVariant","handleClickTab","type","data","questions","dataService","getQuestions","questType","arr","push","i","length","includes","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,UAA1B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAOC,UAAP,MAAuB,aAAvB;AACA,OAAO,aAAP;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAAA,oBACWL,QAAQ,CAAC,EAAD,CADnB;AAAA;AAAA,QACZM,OADY;AAAA,QACHC,UADG;;AAElB,QAAMC,cAAc,GAAIC,IAAD,IAAkB,MAAM;AAC7CF,IAAAA,UAAU,CAACE,IAAD,CAAV;AACD,GAFD;;AAFkB,sBAOdR,UAAU,CAACG,WAAD,CAPI;AAAA,QAMhBM,IANgB,eAMhBA,IANgB;AAAA,QAMFC,SANE,eAMVD,IANU,CAMFC,SANE;AAAA,QAMWC,WANX,eAMWA,WANX;;AASlBV,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,WAAW,CAACC,YAAZ;AACD,GAFQ,EAEP,EAFO,CAAT;;AAGA,QAAMC,SAAS,GAAG,MAAM;AACtB,QAAIC,GAAQ,GAAG,CAAC;AACdN,MAAAA,IAAI,EAAEE,SAAS,CAAC,CAAD,CAAT,CAAaF,IADL;AAEdE,MAAAA,SAAS,EAAEI,GAAG,CAAC,CAAD,CAAH,CAAOJ,SAAP,CAAiBK,IAAjB,CAAsBL,SAAS,CAAC,CAAD,CAAT,CAAaA,SAAnC;AAFG,KAAD,CAAf;;AAIA,SAAI,IAAIM,CAAC,GAAG,CAAZ,EAAeA,CAAC,GAAGN,SAAS,CAACO,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,UAAG,CAACF,GAAG,CAACE,CAAD,CAAH,CAAOR,IAAP,CAAYU,QAAZ,CAAqBR,SAAS,CAACM,CAAD,CAAT,CAAaR,IAAlC,CAAJ,EAA6C;AAC3CM,QAAAA,GAAG,CAACC,IAAJ,CAAS;AACPP,UAAAA,IAAI,EAAEE,SAAS,CAACM,CAAD,CAAT,CAAaR,IADZ;AAEPE,UAAAA,SAAS,EAAEI,GAAG,CAACE,CAAD,CAAH,CAAON,SAAP,CAAiBK,IAAjB,CAAsBL,SAAS,CAACM,CAAD,CAAT,CAAaN,SAAnC;AAFJ,SAAT;AAID,OANuC,CAOzC;;AACA;;AACD,WAAOI,GAAP;AACD,GAfD;;AAgBAK,EAAAA,OAAO,CAACC,GAAR,CAAYP,SAAS,EAArB;AACA,SACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,CADF,EAME;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACER,OAAO,IAAI,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,OAArB;AAA8B,IAAA,SAAS,EAAEQ,SAAS,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADb,CANF,CADF;AAYD,CAzCD;;AA2CA,eAAeT,KAAf","sourcesContent":["import React, { useState, useContext, useEffect } from \"react\";\nimport BanckQuest from './BankQuest';\nimport \"./Admin.css\";\nimport { DataContext } from \"../contexts/dataContext\";\n\nconst Admin = () => {\n  const[variant, setVariant] = useState('')\n  const handleClickTab = (type: string) => () => {\n    setVariant(type)\n  };\n  const {\n    data, data: { questions }, dataService\n  } = useContext(DataContext);\n\n  useEffect(() => {\n    dataService.getQuestions()\n  },[])\n  const questType = () => {\n    let arr: any = [{\n      type: questions[0].type,\n      questions: arr[0].questions.push(questions[0].questions)\n    }]\n    for(let i = 0; i < questions.length; i++) {\n      if(!arr[i].type.includes(questions[i].type)) {\n        arr.push({\n          type: questions[i].type,\n          questions: arr[i].questions.push(questions[i].questions)\n        })\n      }\n     // arr[i].questions.push(...questions[i].questions);\n    }\n    return arr\n  }\n  console.log(questType())\n  return (\n    <div className=\"Admin\">\n      <div className=\"Admin-side\">\n          <div className=\"Admin-tab Admin-tabs\"  >Questions Groups</div>\n{/*            {questType().type.map((q: any) => \n          <div key={q} className=\"Admin-tab\" onClick={handleClickTab(q)}>{q}</div>)} */}\n      </div>\n      <div className=\"Admin-content\" >\n       {variant && <BanckQuest variant={variant} questType={questType()} />}\n      </div>\n    </div>\n  );\n};\n\nexport default Admin;\n"]},"metadata":{},"sourceType":"module"}
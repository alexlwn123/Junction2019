{"ast":null,"code":"import _defineProperty from \"/Users/Mehdi/Junction2019/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport * as Questions from '../db.json';\nexport const initialDataState = {\n  questions: Questions\n};\nexport const dataReducer = (state, action) => {\n  switch (action.type) {\n    case \"FETCH_QUESTIONS\":\n      return _objectSpread({}, state, {\n        questions: action.payload\n      });\n\n    case \"ADD_QUESTIONS\":\n      return _objectSpread({}, state, {\n        questions: state.questions.concat(action.payload)\n      });\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/Mehdi/Junction2019/src/reducers/dataReducer.ts"],"names":["Questions","initialDataState","questions","dataReducer","state","action","type","payload","concat"],"mappings":";;;;;;AAAA,OAAO,KAAKA,SAAZ,MAA2B,YAA3B;AAOA,OAAO,MAAMC,gBAA2B,GAAG;AACzCC,EAAAA,SAAS,EAAEF;AAD8B,CAApC;AAOP,OAAO,MAAMG,WAAW,GAAG,CAACC,KAAD,EAAmBC,MAAnB,KAA0C;AACnE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,iBAAL;AACE,+BAAYF,KAAZ;AAAmBF,QAAAA,SAAS,EAAEG,MAAM,CAACE;AAArC;;AACF,SAAK,eAAL;AACE,+BAAYH,KAAZ;AAAmBF,QAAAA,SAAS,EAAEE,KAAK,CAACF,SAAN,CAAgBM,MAAhB,CAAuBH,MAAM,CAACE,OAA9B;AAA9B;;AACF;AACE,aAAOH,KAAP;AANJ;AAQD,CATM","sourcesContent":["import * as Questions from '../db.json';\nimport { IQuestion } from '../components/Form.js';\n\nexport interface DataState {\n    questions: IQuestion;\n}\n\nexport const initialDataState: DataState = {\n  questions: Questions\n};\nexport type DataAction = \n| { type: \"FETCH_QUESTIONS\"; payload: IIQuestion[] }\n| { type: \"ADD_QUESTIONS\"; payload: IQuestion };\n\nexport const dataReducer = (state: DataState, action: DataAction) => {\n  switch (action.type) {\n    case \"FETCH_QUESTIONS\":\n      return { ...state, questions: action.payload };\n    case \"ADD_QUESTIONS\":\n      return { ...state, questions: state.questions.concat(action.payload) };\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _defineProperty from \"/Users/Mehdi/Junction2019/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/Users/Mehdi/Junction2019/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/Mehdi/Junction2019/src/components/Form.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useContext } from \"react\";\nimport Button from \"./Button\";\nimport \"./Form.css\";\nimport { DataContext } from \"../contexts/dataContext\";\n\nconst Form = () => {\n  const _useState = useState({\n    type: \"\",\n    question: \"\",\n    options: [],\n    answer: \"\"\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        state = _useState2[0],\n        setState = _useState2[1];\n\n  const _useState3 = useState(\"\"),\n        _useState4 = _slicedToArray(_useState3, 2),\n        option = _useState4[0],\n        setOption = _useState4[1];\n\n  const _useContext = useContext(DataContext),\n        dataService = _useContext.dataService;\n\n  const handleAddOption = e => {\n    e.preventDefault();\n    const _ref = e.target,\n          value = _ref.value;\n    setState(_objectSpread({}, state, {\n      options: state.options.concat(option)\n    }));\n  };\n\n  const handleChange = e => {\n    const _ref2 = e.target,\n          name = _ref2.name,\n          value = _ref2.value;\n    setState(_objectSpread({}, state, {\n      [name]: value\n    }));\n  };\n\n  const handleOptionChange = e => {\n    const _ref3 = e.target,\n          name = _ref3.name,\n          value = _ref3.value;\n    setOption(value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    dataService.addQuestion(state);\n    console.log(state);\n    /*   setState({\n    ...state,\n    type: '',\n    question: '',\n    options: [],\n    answer: ''\n    }) */\n  };\n\n  const question = state.question,\n        type = state.type,\n        answer = state.answer,\n        options = state.options;\n  return React.createElement(\"form\", {\n    className: \"Form\",\n    onSubmit: handleSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"Form-label\",\n    htmlFor: \"type\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, \"Type\"), React.createElement(\"input\", {\n    className: \"Form-input\",\n    name: \"type\",\n    type: \"text\",\n    value: type,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    className: \"Form-label\",\n    htmlFor: \"question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Question\"), React.createElement(\"input\", {\n    className: \"Form-input\",\n    name: \"question\",\n    type: \"text\",\n    value: question,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }), React.createElement(\"form\", {\n    onSubmit: handleAddOption,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    className: \"Form-label\",\n    htmlFor: \"options\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, \"Options\"), React.createElement(\"input\", {\n    className: \"Form-input\",\n    name: \"options\",\n    type: \"text\",\n    value: option,\n    onChange: handleOptionChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), options.map((op, index) => React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }, index + 1, \"- \", op)), React.createElement(Button, {\n    text: \"Add option\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  })), React.createElement(\"label\", {\n    className: \"Form-label\",\n    htmlFor: \"answer\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100\n    },\n    __self: this\n  }, \"Answer\"), React.createElement(\"input\", {\n    className: \"Form-input\",\n    name: \"answer\",\n    type: \"text\",\n    value: answer,\n    onChange: handleChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }), React.createElement(Button, {\n    text: \"Add Question\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110\n    },\n    __self: this\n  }));\n};\n\nexport default Form;","map":{"version":3,"sources":["/Users/Mehdi/Junction2019/src/components/Form.tsx"],"names":["React","useState","useContext","Button","DataContext","Form","type","question","options","answer","state","setState","option","setOption","dataService","handleAddOption","e","preventDefault","target","value","concat","handleChange","name","handleOptionChange","handleSubmit","addQuestion","console","log","map","op","index"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAO,YAAP;AACA,SAASC,WAAT,QAA4B,yBAA5B;;AASA,MAAMC,IAAI,GAAG,MAAM;AAAA,oBACSJ,QAAQ,CAAY;AAC5CK,IAAAA,IAAI,EAAE,EADsC;AAE5CC,IAAAA,QAAQ,EAAE,EAFkC;AAG5CC,IAAAA,OAAO,EAAE,EAHmC;AAI5CC,IAAAA,MAAM,EAAE;AAJoC,GAAZ,CADjB;AAAA;AAAA,QACVC,KADU;AAAA,QACHC,QADG;;AAAA,qBAOWV,QAAQ,CAAS,EAAT,CAPnB;AAAA;AAAA,QAOVW,MAPU;AAAA,QAOFC,SAPE;;AAAA,sBASOX,UAAU,CAACE,WAAD,CATjB;AAAA,QASTU,WATS,eASTA,WATS;;AAWjB,QAAMC,eAAe,GAAIC,CAAD,IAAkB;AACxCA,IAAAA,CAAC,CAACC,cAAF;AADwC,iBAEtBD,CAAC,CAACE,MAFoB;AAAA,UAEhCC,KAFgC,QAEhCA,KAFgC;AAGxCR,IAAAA,QAAQ,mBACHD,KADG;AAENF,MAAAA,OAAO,EAAEE,KAAK,CAACF,OAAN,CAAcY,MAAd,CAAqBR,MAArB;AAFH,OAAR;AAID,GAPD;;AASA,QAAMS,YAAY,GAAIL,CAAD,IAA8B;AAAA,kBACzBA,CAAC,CAACE,MADuB;AAAA,UACzCI,IADyC,SACzCA,IADyC;AAAA,UACnCH,KADmC,SACnCA,KADmC;AAEjDR,IAAAA,QAAQ,mBACHD,KADG;AAEN,OAACY,IAAD,GAAQH;AAFF,OAAR;AAID,GAND;;AAQA,QAAMI,kBAAkB,GAAIP,CAAD,IAA8B;AAAA,kBAC/BA,CAAC,CAACE,MAD6B;AAAA,UAC/CI,IAD+C,SAC/CA,IAD+C;AAAA,UACzCH,KADyC,SACzCA,KADyC;AAEvDN,IAAAA,SAAS,CAACM,KAAD,CAAT;AACD,GAHD;;AAKA,QAAMK,YAAY,GAAIR,CAAD,IAAwB;AAC3CA,IAAAA,CAAC,CAACC,cAAF;AACAH,IAAAA,WAAW,CAACW,WAAZ,CAAwBf,KAAxB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYjB,KAAZ;AACA;;;;;;;AAOD,GAXD;;AAjCiB,QA8CTH,QA9CS,GA8C2BG,KA9C3B,CA8CTH,QA9CS;AAAA,QA8CCD,IA9CD,GA8C2BI,KA9C3B,CA8CCJ,IA9CD;AAAA,QA8COG,MA9CP,GA8C2BC,KA9C3B,CA8COD,MA9CP;AAAA,QA8CeD,OA9Cf,GA8C2BE,KA9C3B,CA8CeF,OA9Cf;AA+CjB,SACE;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAuB,IAAA,QAAQ,EAAEgB,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,OAAO,EAAC,MAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAIE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,MAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAElB,IAJT;AAKE,IAAA,QAAQ,EAAEe,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAWE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,OAAO,EAAC,UAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAXF,EAcE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEd,QAJT;AAKE,IAAA,QAAQ,EAAEc,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdF,EAqBE;AAAM,IAAA,QAAQ,EAAEN,eAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,OAAO,EAAC,SAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,EAIE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,SAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEH,MAJT;AAKE,IAAA,QAAQ,EAAEW,kBALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJF,EAWGf,OAAO,CAACoB,GAAR,CAAY,CAACC,EAAD,EAAaC,KAAb,KACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,KAAK,GAAG,CADX,QACgBD,EADhB,CADD,CAXH,EAgBE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAhBF,CArBF,EAuCE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAA8B,IAAA,OAAO,EAAC,QAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAvCF,EA0CE;AACE,IAAA,SAAS,EAAC,YADZ;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAEpB,MAJT;AAKE,IAAA,QAAQ,EAAEY,YALZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA1CF,EAiDE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAjDF,CADF;AAqDD,CApGD;;AAsGA,eAAehB,IAAf","sourcesContent":["import React, { useState, FormEvent, useContext } from \"react\";\nimport Button from \"./Button\";\nimport \"./Form.css\";\nimport { DataContext } from \"../contexts/dataContext\";\n\nexport interface IQuestion {\n  id?: string;\n  type: string;\n  question: string;\n  options: string[];\n  answer: string;\n}\nconst Form = () => {\n  const [state, setState] = useState<IQuestion>({\n    type: \"\",\n    question: \"\",\n    options: [],\n    answer: \"\"\n  });\n  const [option, setOption] = useState<string>(\"\");\n\n  const { dataService } = useContext(DataContext);\n\n  const handleAddOption = (e: FormEvent) => {\n    e.preventDefault();\n    const { value } = e.target as HTMLInputElement;\n    setState({\n      ...state,\n      options: state.options.concat(option)\n    });\n  };\n\n  const handleChange = (e: React.FormEvent): void => {\n    const { name, value } = e.target as HTMLInputElement;\n    setState({\n      ...state,\n      [name]: value\n    });\n  };\n\n  const handleOptionChange = (e: React.FormEvent): void => {\n    const { name, value } = e.target as HTMLInputElement;\n    setOption(value);\n  };\n\n  const handleSubmit = (e: React.FormEvent) => {\n    e.preventDefault();\n    dataService.addQuestion(state)\n    console.log(state);\n    /*   setState({\n    ...state,\n    type: '',\n    question: '',\n    options: [],\n    answer: ''\n  }) */\n  };\n\n  const { question, type, answer, options } = state;\n  return (\n    <form className=\"Form\" onSubmit={handleSubmit}>\n      <label className=\"Form-label\" htmlFor=\"type\">\n        Type\n      </label>\n      <input\n        className=\"Form-input\"\n        name=\"type\"\n        type=\"text\"\n        value={type}\n        onChange={handleChange}\n      />\n      <label className=\"Form-label\" htmlFor=\"question\">\n        Question\n      </label>\n      <input\n        className=\"Form-input\"\n        name=\"question\"\n        type=\"text\"\n        value={question}\n        onChange={handleChange}\n      />\n      <form onSubmit={handleAddOption}>\n        <label className=\"Form-label\" htmlFor=\"options\">\n          Options\n        </label>\n        <input\n          className=\"Form-input\"\n          name=\"options\"\n          type=\"text\"\n          value={option}\n          onChange={handleOptionChange}\n        />\n        {options.map((op: string, index: number) => (\n          <div>\n            {index + 1}- {op}\n          </div>\n        ))}\n        <Button text=\"Add option\" />\n      </form>\n      <label className=\"Form-label\" htmlFor=\"answer\">\n        Answer\n      </label>\n      <input\n        className=\"Form-input\"\n        name=\"answer\"\n        type=\"text\"\n        value={answer}\n        onChange={handleChange}\n      />\n      <Button text=\"Add Question\" />\n    </form>\n  );\n};\n\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}